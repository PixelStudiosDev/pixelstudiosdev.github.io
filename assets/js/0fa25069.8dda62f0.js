"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9124],{5865:(e,i,l)=>{l.r(i),l.d(i,{assets:()=>r,contentTitle:()=>t,default:()=>c,frontMatter:()=>d,metadata:()=>u,toc:()=>a});var n=l(4848),s=l(8453);const d={},t="Working with Guilds API",u={id:"guilds/developer-api/guilds-api",title:"Working with Guilds API",description:"- Once you have added Guilds as a dependency in your project, you can start using the Guilds API.",source:"@site/docs/guilds/developer-api/guilds-api.md",sourceDirName:"guilds/developer-api",slug:"/guilds/developer-api/guilds-api",permalink:"/guilds/developer-api/guilds-api",draft:!1,unlisted:!1,editUrl:"https://github.com/PixelStudiosDev/pixelstudiosdev.github.io/edit/master/docs/guilds/developer-api/guilds-api.md",tags:[],version:"current",lastUpdatedAt:1740756331e3,frontMatter:{},sidebar:"guilds",previous:{title:"Using the Guilds API",permalink:"/guilds/developer-api/enable"},next:{title:"Working with Guilds Events",permalink:"/guilds/developer-api/guilds-events"}},r={},a=[{value:"Guilds",id:"guilds",level:3},{value:"Getting a guild",id:"getting-a-guild",level:3},{value:"By guild&#39;s UUID",id:"by-guilds-uuid",level:4},{value:"By player&#39;s UUID",id:"by-players-uuid",level:4},{value:"By guild&#39;s name",id:"by-guilds-name",level:4}];function o(e){const i={code:"code",h1:"h1",h3:"h3",h4:"h4",li:"li",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.h1,{id:"working-with-guilds-api",children:"Working with Guilds API"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["Once you have added ",(0,n.jsx)(i.code,{children:"Guilds"})," as a dependency in your project, you can start using the Guilds API."]}),"\n",(0,n.jsxs)(i.li,{children:["The main class of the Guilds API is ",(0,n.jsx)(i.code,{children:"GuildsAPI"}),". You can use this class to access the API methods."]}),"\n"]}),"\n",(0,n.jsx)(i.h1,{id:"guildsapi-class-methods",children:"GuildsAPI class methods"}),"\n",(0,n.jsx)(i.h3,{id:"guilds",children:"Guilds"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"getGuilds()"}),": Returns a list of all guilds on the server."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"getShownGuilds()"}),": Returns a list of all shown guilds."]}),"\n"]}),"\n",(0,n.jsx)(i.h3,{id:"getting-a-guild",children:"Getting a guild"}),"\n",(0,n.jsx)(i.h4,{id:"by-guilds-uuid",children:"By guild's UUID"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"getGuildByUuid(UUID uuid)"}),": Returns the guild with the given UUID. Returns ",(0,n.jsx)(i.code,{children:"null"})," if the guild does not exist."]}),"\n"]}),"\n",(0,n.jsx)(i.h4,{id:"by-players-uuid",children:"By player's UUID"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"getGuildByPlayer(UUID playerUuid)"}),": Returns the guild of the player with the given UUID. Returns ",(0,n.jsx)(i.code,{children:"null"})," if the player is not in a guild."]}),"\n"]}),"\n",(0,n.jsx)(i.h4,{id:"by-guilds-name",children:"By guild's name"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"getGuildByName(String name)"}),": Returns the guild with the given name. Returns ",(0,n.jsx)(i.code,{children:"null"})," if the guild does not exist."]}),"\n"]}),"\n",(0,n.jsx)(i.h1,{id:"example",children:"Example"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-java",metastring:'title="ExampleListener.java"',children:'@EventHandler\npublic void onJoin(PlayerJoinEvent event) {\n    Player player = event.getPlayer();\n\n    Guild guild = GuildsAPI.getGuildByPlayer(player.getUniqueId());\n    if (guild == null) {\n        return;\n    }\n\n    player.sendMessage("You are in the guild " + guild.getName() + "!");\n}\n'})})]})}function c(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}},8453:(e,i,l)=>{l.d(i,{R:()=>t,x:()=>u});var n=l(6540);const s={},d=n.createContext(s);function t(e){const i=n.useContext(d);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function u(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),n.createElement(d.Provider,{value:i},e.children)}}}]);