"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8762],{2672:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"guilds/features/rewards","title":"Custom Rewards","description":"What are custom rewards?","source":"@site/docs/guilds/features/rewards.md","sourceDirName":"guilds/features","slug":"/guilds/features/rewards","permalink":"/guilds/features/rewards","draft":false,"unlisted":false,"editUrl":"https://github.com/PixelStudiosDev/pixelstudiosdev.github.io/edit/master/docs/guilds/features/rewards.md","tags":[],"version":"current","lastUpdatedAt":1749064811000,"sidebarPosition":4,"frontMatter":{"sidebar_position":4,"title":"Custom Rewards"},"sidebar":"guilds","previous":{"title":"Quest System","permalink":"/guilds/features/quest"},"next":{"title":"Achievements","permalink":"/guilds/features/achievements"}}');var n=t(4848),d=t(8453);const i={sidebar_position:4,title:"Custom Rewards"},o=void 0,l={},a=[{value:"What are custom rewards?",id:"what-are-custom-rewards",level:2},{value:"How to configure the rewards system",id:"how-to-configure-the-rewards-system",level:2},{value:"Supported types",id:"supported-types",level:2},{value:"Condition types",id:"condition-types",level:2}];function c(e){const s={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h2,{id:"what-are-custom-rewards",children:"What are custom rewards?"}),"\n",(0,n.jsxs)(s.p,{children:["Custom rewards are a feature that allows you to create your own rewards for the guilds. ",(0,n.jsx)("br",{}),"\nAn example is the ",(0,n.jsx)(s.code,{children:"ORANGE"})," TAG color, which is originally available only for VIP guild leaders. ",(0,n.jsx)("br",{})]}),"\n",(0,n.jsxs)(s.p,{children:["As other features, you can find the dedicated configuration file: ",(0,n.jsx)(s.code,{children:"rewards.yml"}),". ",(0,n.jsx)("br",{})]}),"\n",(0,n.jsx)(s.h2,{id:"how-to-configure-the-rewards-system",children:"How to configure the rewards system"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-yaml",metastring:'title="rewards.yml"',children:"tags:\n  orange:\n    color: ORANGE\n    display-name: Orange\n    conditions:\n      - RANK:MASTER\n      - MC_PERMISSION:guilds.mvp++\n"})}),"\n",(0,n.jsxs)(s.p,{children:["In this example, we can see how to create a custom TAG color reward. ",(0,n.jsx)("br",{}),"\nWe have set the color, display name and the conditions to use it. ",(0,n.jsx)("br",{}),"\nThe ",(0,n.jsx)(s.code,{children:"RANK:MASTER"})," is set to allow only the guild leader to be checked for the condition. ",(0,n.jsx)("br",{})]}),"\n",(0,n.jsx)(s.admonition,{type:"info",children:(0,n.jsxs)(s.p,{children:["Check the ",(0,n.jsx)(s.a,{href:"#supported-types",children:"Supported types"})," section to check all the supported types. ",(0,n.jsx)("br",{})]})}),"\n",(0,n.jsx)(s.h2,{id:"supported-types",children:"Supported types"}),"\n",(0,n.jsxs)(s.p,{children:["The conditions are available for all the rewards. ",(0,n.jsx)("br",{})]}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Section"}),(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{children:"Options"}),(0,n.jsx)(s.th,{children:"Description"})]})}),(0,n.jsx)(s.tbody,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"tags"}),(0,n.jsx)(s.td,{children:"Guild TAG"}),(0,n.jsx)(s.td,{children:"color, display-name"}),(0,n.jsx)(s.td,{children:"The color and display name of the TAG."})]})})]}),"\n",(0,n.jsx)(s.h2,{id:"condition-types",children:"Condition types"}),"\n",(0,n.jsxs)(s.p,{children:["Each condition type has its own format. ",(0,n.jsx)("br",{}),"\nUsually, the format is ",(0,n.jsx)(s.code,{children:"TYPE:VALUE"}),". ",(0,n.jsx)("br",{})]}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{children:"Description"}),(0,n.jsx)(s.th,{children:"Format"}),(0,n.jsx)(s.th,{children:"Values"}),(0,n.jsx)(s.th,{children:"Example"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"RANK"}),(0,n.jsx)(s.td,{children:"The rank of the player."}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"RANK:{type}"})}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.code,{children:"MASTER"}),", ",(0,n.jsx)(s.code,{children:"DEFAULT"}),", rank name"]}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"RANK:admin"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"RANK_PERM"}),(0,n.jsx)(s.td,{children:"The permission of the player's rank."}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"RANK_PERM:{permission}"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"/guilds/useful#rank-permissions-list",children:"Guild Rank Perm"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"RANK_PERM:modify-tag"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"MC_PERMISSION"}),(0,n.jsx)(s.td,{children:"The permission of the player."}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"MC_PERMISSION:{permission}"})}),(0,n.jsx)(s.td,{children:"Any permission"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"MC_PERMISSION:guilds.mvp"})})]})]})]})]})}function h(e={}){const{wrapper:s}={...(0,d.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>o});var r=t(6540);const n={},d=r.createContext(n);function i(e){const s=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),r.createElement(d.Provider,{value:s},e.children)}}}]);