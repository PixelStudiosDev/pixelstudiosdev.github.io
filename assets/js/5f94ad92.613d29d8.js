"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5683],{8453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>l});var r=s(6540);const n={},d=r.createContext(n);function i(e){const t=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),r.createElement(d.Provider,{value:t},e.children)}},9744:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"guilds-tasks/rewards","title":"Rewards","description":"Structure","source":"@site/docs/guilds-tasks/rewards.mdx","sourceDirName":"guilds-tasks","slug":"/guilds-tasks/rewards","permalink":"/guilds-tasks/rewards","draft":false,"unlisted":false,"editUrl":"https://github.com/PixelStudiosDev/pixelstudiosdev.github.io/edit/master/docs/guilds-tasks/rewards.mdx","tags":[],"version":"current","lastUpdatedAt":1751712207000,"sidebarPosition":5,"frontMatter":{"title":"Rewards","sidebar_position":5},"sidebar":"guildstasks","previous":{"title":"Conditions","permalink":"/guilds-tasks/conditions"}}');var n=s(4848),d=s(8453);const i={title:"Rewards",sidebar_position:5},l=void 0,c={},o=[{value:"Structure",id:"structure",level:2},{value:"General Conditions",id:"general-conditions",level:3}];function a(e){const t={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"structure",children:"Structure"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",metastring:'title="tasks.yml"',children:"get_diamonds:\n  type: block_break\n\n  conditions:\n    - type: block\n      materials:\n        - DIAMOND_ORE\n        - GOLD_ORE\n\n  rewards:\n    - guild_xp:100\n    - guild_quest:2\n"})}),"\n",(0,n.jsxs)(t.p,{children:["We are going to focus on the ",(0,n.jsx)(t.code,{children:"rewards"})," part of the task structure. ",(0,n.jsx)("br",{})]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"Rewards"})," is a list of rewards, written as a list of strings, ",(0,n.jsx)(t.strong,{children:"each element"})," follows the format: ",(0,n.jsx)(t.code,{children:"{reward_type}:{value}"})," ",(0,n.jsx)("br",{})]}),"\n",(0,n.jsxs)(t.p,{children:["where ",(0,n.jsx)(t.code,{children:"{reward_type}"})," is the type of reward and ",(0,n.jsx)(t.code,{children:"{value}"})," is the value for that reward. ",(0,n.jsx)("br",{}),"\nValue is ",(0,n.jsx)(t.strong,{children:"usually"})," a number, but it can also be another type of value, depending on the reward type. ",(0,n.jsx)("br",{})]}),"\n",(0,n.jsx)(t.h3,{id:"general-conditions",children:"General Conditions"}),"\n",(0,n.jsxs)(t.p,{children:["These conditions will be structured using a string to value format. ",(0,n.jsx)("br",{})]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Values Type"}),(0,n.jsx)(t.th,{children:"Description"}),(0,n.jsx)(t.th,{children:"Example"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"xp"})}),(0,n.jsx)(t.td,{children:"Numeric"}),(0,n.jsx)(t.td,{children:"Give the player experience points."}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"xp:100"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"guild_xp"})}),(0,n.jsx)(t.td,{children:"Numeric"}),(0,n.jsx)(t.td,{children:"Add experience points to the guild."}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"guild_xp:100"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"guild_quest"})}),(0,n.jsx)(t.td,{children:"Numeric"}),(0,n.jsx)(t.td,{children:"Add progress to the guild quest."}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"guild_quest:2"})})]})]})]})]})}function u(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}}}]);