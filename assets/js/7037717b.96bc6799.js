"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[959],{8453:(e,s,i)=>{i.d(s,{R:()=>r,x:()=>c});var d=i(6540);const n={},t=d.createContext(n);function r(e){const s=d.useContext(t);return d.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),d.createElement(t.Provider,{value:s},e.children)}},9992:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>l,contentTitle:()=>c,default:()=>x,frontMatter:()=>r,metadata:()=>d,toc:()=>o});const d=JSON.parse('{"id":"epicachievements/configuration/conditions","title":"Conditions","description":"Conditions are used to set requirements to be met in order to complete an achievement.","source":"@site/docs/epicachievements/configuration/04-conditions.mdx","sourceDirName":"epicachievements/configuration","slug":"/epicachievements/configuration/conditions","permalink":"/epicachievements/configuration/conditions","draft":false,"unlisted":false,"editUrl":"https://github.com/PixelStudiosDev/pixelstudiosdev.github.io/edit/master/docs/epicachievements/configuration/04-conditions.mdx","tags":[],"version":"current","lastUpdatedAt":1746110209000,"sidebarPosition":4,"frontMatter":{},"sidebar":"epicachievements","previous":{"title":"Placeholder Task","permalink":"/epicachievements/configuration/tasks/placeholder"},"next":{"title":"Rewards","permalink":"/epicachievements/configuration/rewards"}}');var n=i(4848),t=i(8453);const r={},c="Conditions",l={},o=[{value:"Global Conditions",id:"global-conditions",level:3},{value:"Task-specific Conditions",id:"task-specific-conditions",level:3},{value:"Global conditions",id:"global-conditions-1",level:3},{value:"Plugin Hooks",id:"plugin-hooks",level:3},{value:"Other conditions",id:"other-conditions",level:3}];function h(e){const s={a:"a",admonition:"admonition",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components},{Details:i}=s;return i||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"conditions",children:"Conditions"})}),"\n",(0,n.jsxs)(s.p,{children:["Conditions are used to set requirements to be met in order to complete an achievement. ",(0,n.jsx)("br",{}),"\nBelow is a list of the built-in conditions:"]}),"\n",(0,n.jsxs)(s.admonition,{type:"info",children:[(0,n.jsxs)(s.p,{children:["By default, all lists of entities, items, etc. are treated as ",(0,n.jsx)(s.strong,{children:"whitelists"}),". ",(0,n.jsx)("br",{}),"\nTo make them ",(0,n.jsx)(s.strong,{children:"blacklists"}),", add ",(0,n.jsx)(s.code,{children:"blacklist: true"}),"."]}),(0,n.jsx)(s.p,{children:"Blacklist example:"}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-yaml",children:'conditions:\n  - type: items\n    items:\n      - "NETHERITE_INGOT"\n    blacklist: true\n'})})]}),"\n",(0,n.jsxs)(s.admonition,{type:"tip",children:[(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Wildcards"})," are supported in most condition types:"]}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-yaml",children:'conditions:\n  - type: items\n    items:\n      - "*_PICKAXE" # Matches all types of pickaxes\n'})})]}),"\n",(0,n.jsxs)(i,{children:[(0,n.jsx)("summary",{children:"Version 1.0"}),(0,n.jsxs)("p",{children:[(0,n.jsx)(s.h3,{id:"global-conditions",children:"Global Conditions"}),(0,n.jsx)(s.p,{children:"Supported by all types of achievements."}),(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Condition"}),(0,n.jsx)(s.th,{children:"Description"}),(0,n.jsx)(s.th,{children:"Examples"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"game-modes"})}),(0,n.jsx)(s.td,{children:"Allowed game modes"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"- SURVIVAL"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"worlds"})}),(0,n.jsx)(s.td,{children:"Allowed worlds"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:'- "world"'})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"item-in-hand"})}),(0,n.jsx)(s.td,{children:"Requires the player to have an item in hand"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"- <material>"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"item-equipped"})}),(0,n.jsx)(s.td,{children:"Requires the player to have an item equipped"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"- <material>"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"riding-entity"})}),(0,n.jsx)(s.td,{children:"Requires the player to ride an entity"}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.code,{children:"- ALL"}),(0,n.jsx)("br",{}),(0,n.jsx)(s.code,{children:"- <entity>"})]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"regions"})}),(0,n.jsxs)(s.td,{children:["A list of ",(0,n.jsx)(s.a,{href:"https://dev.bukkit.org/projects/worldguard",children:"WorldGuard"})," regions"]}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"- <region-id>"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"is-sneaking"})}),(0,n.jsx)(s.td,{children:"Requires the player to be sneaking"}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.code,{children:"true"})," ",(0,n.jsx)(s.code,{children:"false"})]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"is-sprinting"})}),(0,n.jsx)(s.td,{children:"Requires the player to be sprinting"}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.code,{children:"true"})," ",(0,n.jsx)(s.code,{children:"false"})]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"is-flying"})}),(0,n.jsx)(s.td,{children:"Requires the player to be flying"}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.code,{children:"true"})," ",(0,n.jsx)(s.code,{children:"false"})]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"has-open-inventory"})}),(0,n.jsxs)(s.td,{children:["Checks if the player has an inventory open.",(0,n.jsx)("br",{}),"It isn't possible to check if the player's own inventory is open."]}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.code,{children:"true"})," ",(0,n.jsx)(s.code,{children:"false"})]})]})]})]}),(0,n.jsx)(s.h3,{id:"task-specific-conditions",children:"Task-specific Conditions"}),(0,n.jsx)(s.p,{children:"Supported only by some types of achievements."}),(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Condition"}),(0,n.jsx)(s.th,{children:"Description"}),(0,n.jsx)(s.th,{children:"Examples"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"entities"})}),(0,n.jsx)(s.td,{children:"A list of entities"}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.code,{children:"- CHICKEN"}),(0,n.jsx)("br",{}),(0,n.jsx)(s.code,{children:"- mythicmobs:<mob-id>"}),(0,n.jsx)("br",{}),(0,n.jsx)(s.code,{children:"- mm:<mob-id>"})]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"items"})}),(0,n.jsx)(s.td,{children:"A list of items"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"- <material>"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"blocks"})}),(0,n.jsx)(s.td,{children:"A list of blocks"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"- <material>"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"potion-effects"})}),(0,n.jsxs)(s.td,{children:["A list of ",(0,n.jsx)(s.a,{href:"https://hub.spigotmc.org/javadocs/spigot/org/bukkit/potion/PotionType.html",children:"potion types"})]}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"- SWIFTNESS"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"crop-age"})}),(0,n.jsx)(s.td,{children:"Specify crop growth stages"}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.code,{children:"MAX"})," ",(0,n.jsx)(s.code,{children:"<age>"})]})]})]})]})]})]}),"\n",(0,n.jsx)(s.h3,{id:"global-conditions-1",children:"Global conditions"}),"\n",(0,n.jsx)(s.p,{children:"Supported by all types of achievements."}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Condition"}),(0,n.jsx)(s.th,{children:"Description"}),(0,n.jsx)(s.th,{children:"Examples"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"game_modes"})}),(0,n.jsx)(s.td,{children:"Allowed game modes"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"game-modes"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"worlds"})}),(0,n.jsx)(s.td,{children:"Allowed worlds"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"worlds"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"biomes"})}),(0,n.jsx)(s.td,{children:"Allowed biomes"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"biomes"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"has_item"})}),(0,n.jsx)(s.td,{children:"Requires the player to have an item in their inventory"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"items"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"has_held"})}),(0,n.jsx)(s.td,{children:"Requires the player to have an item in hand"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"items"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"has_equipped"})}),(0,n.jsx)(s.td,{children:"Requires the player to have an item equipped"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"items"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"riding_entity"})}),(0,n.jsx)(s.td,{children:"Requires the player to ride an entity"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"entities"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"is_sneaking"})}),(0,n.jsx)(s.td,{children:"Requires the player to be sneaking"}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.code,{children:"value"})," (true/false)"]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"is_sprinting"})}),(0,n.jsx)(s.td,{children:"Requires the player to be sprinting"}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.code,{children:"value"})," (true/false)"]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"is_flying"})}),(0,n.jsx)(s.td,{children:"Requires the player to be flying"}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.code,{children:"value"})," (true/false)"]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"has_inventory_open"})}),(0,n.jsxs)(s.td,{children:["Checks if the player has an inventory open.",(0,n.jsx)("br",{}),"It isn't possible to check if the player's own inventory is open."]}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.code,{children:"value"})," (true/false)"]})]})]})]}),"\n",(0,n.jsx)(s.h3,{id:"plugin-hooks",children:"Plugin Hooks"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Plugin"}),(0,n.jsx)(s.th,{children:"Condition"}),(0,n.jsx)(s.th,{children:"Description"}),(0,n.jsx)(s.th,{children:"Required arguments"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"https://dev.bukkit.org/projects/worldguard",children:"WorldGuard"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"regions"})}),(0,n.jsx)(s.td,{children:"Check if a player is within a region"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"regions"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"https://www.spigotmc.org/resources/34315/",children:"Vault"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"vault"})}),(0,n.jsx)(s.td,{children:"Check if a player has a certain amount of money"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"balance"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"https://www.spigotmc.org/resources/6245/",children:"PlaceholderAPI"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"placeholder"})}),(0,n.jsx)(s.td,{children:"Evaluate a PAPI placeholder"}),(0,n.jsx)(s.td,{children:(0,n.jsxs)(s.a,{href:"./tasks/placeholder#placeholders-that-output-text",children:[(0,n.jsx)(s.code,{children:"placeholder"})," ",(0,n.jsx)(s.code,{children:"value"})," ",(0,n.jsx)(s.code,{children:"operator"})]})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"https://polymart.org/resource/customfishing.2723",children:"CustomFishing"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"custom_fishing_loot"})}),(0,n.jsx)(s.td,{children:"A list of loot IDs"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"loot"})})]})]})]}),"\n",(0,n.jsx)(s.h3,{id:"other-conditions",children:"Other conditions"}),"\n",(0,n.jsxs)(s.p,{children:["Supported only by some types of achievements: refer to the ",(0,n.jsx)(s.a,{href:"./tasks",children:"tasks"})," documentation."]}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Condition"}),(0,n.jsx)(s.th,{children:"Description"}),(0,n.jsx)(s.th,{children:"Required arguments"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"entities"})}),(0,n.jsx)(s.td,{children:"A list of entities"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"entities"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"is_hostile"})}),(0,n.jsx)(s.td,{children:"Check if an entity is hostile"}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.code,{children:"value"})," (true/false)"]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"items"})}),(0,n.jsx)(s.td,{children:"A list of items"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"items"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"blocks"})}),(0,n.jsx)(s.td,{children:"A list of blocks"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"blocks"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"potion_types"})}),(0,n.jsxs)(s.td,{children:["A list of ",(0,n.jsx)(s.a,{href:"https://hub.spigotmc.org/javadocs/spigot/org/bukkit/potion/PotionType.html",children:"potion types"})]}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"types"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"crop_age"})}),(0,n.jsx)(s.td,{children:"Specify crop growth stages"}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.code,{children:"age"})," (growth stage/",(0,n.jsx)(s.code,{children:"MAX"}),")"]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"damage_causes"})}),(0,n.jsxs)(s.td,{children:["A list of ",(0,n.jsx)(s.a,{href:"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/event/entity/EntityDamageEvent.DamageCause.html",children:"damage causes"})]}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"causes"})})]})]})]})]})}function x(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}}}]);